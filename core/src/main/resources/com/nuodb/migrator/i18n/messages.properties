com.nuodb.migrator.root.group.name=Options
com.nuodb.migrator.help.option.description=Prints help contents on the requested command
com.nuodb.migrator.version.option.description=Prints version number of the nuodb migrator
com.nuodb.migrator.help.argument.name=command
com.nuodb.migrator.list.option.description=Lists available migration commands
com.nuodb.migrator.list.option.output=The list of available migration commands (use --help <command> to print help on a particular command)
com.nuodb.migrator.config.option.description=Uses config from the specified path (a file path, a class path resource or a resource URL) and extends command line with config parameters
com.nuodb.migrator.config.argument.name=path
com.nuodb.migrator.command.option.description=Executes specified migration command with its arguments
com.nuodb.migrator.command.option.help.values=command arguments

com.nuodb.migrator.dump.group.name=dump
com.nuodb.migrator.source.group.name=source database connection
com.nuodb.migrator.source.driver.option.description=JDBC driver class name
com.nuodb.migrator.source.driver.argument.name=driver
com.nuodb.migrator.source.url.option.description=Source database connection URL in the standard syntax jdbc:<subprotocol>:<subname>
com.nuodb.migrator.source.url.argument.name=url
com.nuodb.migrator.source.username.option.description=Source database username
com.nuodb.migrator.source.username.argument.name=username
com.nuodb.migrator.source.password.option.description=Source database password (will prompt if this option is not provided)
com.nuodb.migrator.source.password.argument.name=password
com.nuodb.migrator.source.properties.option.description=Additional connection properties encoded as URL query string "property1=value1&property2=value2"
com.nuodb.migrator.source.properties.argument.name=properties
com.nuodb.migrator.source.catalog.option.description=Default database catalog name to use
com.nuodb.migrator.source.catalog.argument.name=catalog
com.nuodb.migrator.source.schema.option.description=Default database schema name to use
com.nuodb.migrator.source.schema.argument.name=schema
com.nuodb.migrator.source.auto.commit.option.description=If set to true each individual statement is treated as a transaction and is automatically committed after it is executed, false by default
com.nuodb.migrator.source.auto.commit.argument.name=true | false
com.nuodb.migrator.source.transaction.isolation.option.description=Sets transaction isolation level, it's a symbolic name or an integer constant of the required level from JDBC standard: none or 0, read.uncommitted or 1, read.committed or 2, repeatable.read or 4, serializable or 8. NuoDB does not support all of the levels, only read.committed or 2, serializable or 8 and also supports two additional levels that are not in the JDBC standard: write.committed or 5, consistent.read or 7
com.nuodb.migrator.source.transaction.isolation.argument.name=transaction isolation

com.nuodb.migrator.output.group=output specification
com.nuodb.migrator.output.type.option.description=Output type (CVS, XML, BSON)
com.nuodb.migrator.output.type.argument.name=output type
com.nuodb.migrator.output.path.option.description=Path on the file system
com.nuodb.migrator.output.path.argument.name=output path
com.nuodb.migrator.output.option.description=Output format attributes
com.nuodb.migrator.output.argument.description=attribute value

com.nuodb.migrator.time.zone.option.description=Time zone enables date columns to be dumped and reloaded between servers in different time zones
com.nuodb.migrator.time.zone.argument.name=time zone

com.nuodb.migrator.meta.data.filter.manager.group.name=table names
com.nuodb.migrator.table.option.description=Comma separated list of either simple table names or fully qualified names including catalog and schema or table name patterns using regex symbols, where * matches any number of characters and ? symbol to match any single character or mix of table names and table name patterns
com.nuodb.migrator.table.exclude.option.description=Comma separated list of either excluded table names or excluded table name patterns using regex symbol * to match any number of characters and ? to match any single character
com.nuodb.migrator.table.type.option.description=Comma separated types of tables (TABLE, VIEW, SYSTEM TABLE, GLOBAL TEMPORARY, ALIAS, SYNONYM, etc) to process, by default only TABLE type is processed
com.nuodb.migrator.table.type.argument.name=table type
com.nuodb.migrator.table.argument.name=table
com.nuodb.migrator.table.exclude.argument.name=table

com.nuodb.migrator.query.group.name=select statements
com.nuodb.migrator.query.option.description=Select statement
com.nuodb.migrator.query.argument.name=query

com.nuodb.migrator.executor.group.name=executor options
com.nuodb.migrator.threads.option.description=Number of worker threads, defaults to a number of available processors
com.nuodb.migrator.threads.argument.name=threads
com.nuodb.migrator.query.limit.option.description=Query limit is a maximum number of rows to split a table into chunks with LIMIT {limit} OFFSET {offset} syntax in a database specific way, where each chunk is written to a separate file. If a query limit is not given or is not supported by the migrator for a particular database queries are not split
com.nuodb.migrator.query.limit.argument.name=query limit
com.nuodb.migrator.parallelizer.option.description=Parallelization strategy name, either table.level (default), row.level or fully classified class name of a custom parallelizer implementing com.nuodb.migrator.backup.loader.Parallelizer. Table level parallelization activates 1 worker thread per table at max, while row level enables forking with more than 1 thread, where the number of worker threads is based on the weight of the loaded row set to the size of loaded tables. Notice row level forking may (and typically does) reorder the rows in the target table.
com.nuodb.migrator.parallelizer.argument.name=parallelizer
com.nuodb.migrator.parallelizer.attributes.option.description=Parallelizer attributes, such as min.rows.per.thread and max.rows.per.thread which are min possible and max allowed number of rows per thread, default are 100000 and 0 (unlimited) correspondingly
com.nuodb.migrator.parallelizer.attributes.argument.name=parallelizer attributes

com.nuodb.migrator.load.group.name=load
com.nuodb.migrator.target.group.name=target database connection
com.nuodb.migrator.target.driver.option.description=JDBC driver class name, default based upon target.url
com.nuodb.migrator.target.driver.argument.name=driver
com.nuodb.migrator.target.url.option.description=Target database connection URL in the format jdbc:com.nuodb://{broker1}:{port1},{broker2}:{port2},..,{brokerN}:{portN}/{database}?{params} for com.nuodb.jdbc.Driver
com.nuodb.migrator.target.url.argument.name=url
com.nuodb.migrator.target.username.option.description=Target database username
com.nuodb.migrator.target.username.argument.name=username
com.nuodb.migrator.target.password.option.description=Target database password (will prompt if this option is not provided)
com.nuodb.migrator.target.password.argument.name=password
com.nuodb.migrator.target.properties.option.description=Additional connection properties encoded as URL query string "property1=value1&property2=value2"
com.nuodb.migrator.target.properties.argument.name=properties
com.nuodb.migrator.target.schema.option.description=Default database schema name to use
com.nuodb.migrator.target.schema.argument.name=schema
com.nuodb.migrator.target.auto.commit.option.description=If set to true each individual statement is treated as a transaction and is automatically committed after it is executed, false by default
com.nuodb.migrator.target.auto.commit.argument.name=true | false

com.nuodb.migrator.schema.group.name=generate schema
com.nuodb.migrator.schema.output.group.name=script output
com.nuodb.migrator.meta.data.option.description=Includes or excludes specific meta data type (catalog, schema, table, column, primary.key, index, foreign.key, check, sequence, column.trigger) from the generated output, by default all objects are generated
com.nuodb.migrator.naming.strategy.option.description=Naming strategy to use, either qualify, hash, auto or class name implementing com.nuodb.migrator.jdbc.metadata.generator.NamingStrategy, default is auto
com.nuodb.migrator.naming.strategy.argument.name=naming strategy
com.nuodb.migrator.meta.data.argument.name=true | false
com.nuodb.migrator.script.type.option.description=Comma separated types of statements to be generated, default is drop & create
com.nuodb.migrator.script.type.argument.name=drop | create

com.nuodb.migrator.group.scripts.by.option.description=Group generated DDL scripts, table by default
com.nuodb.migrator.group.scripts.by.argument.name=table | meta.data
com.nuodb.migrator.identifier.quoting.option.description=Identifier quoting policy name, minimal, always or class name implementing com.nuodb.migrator.jdbc.dialect.IdentifierQuoting, default is always
com.nuodb.migrator.identifier.quoting.argument.name=identifier quoting
com.nuodb.migrator.identifier.normalize.option.description=Identifier transformer to use, available normalizers are noop, standard, lower.case, upper.case or class name implementing com.nuodb.migrator.jdbc.dialect.IdentifierNormalizer, default is noop
com.nuodb.migrator.identifier.normalizer.argument.name=identifier normalizer

com.nuodb.migrator.migration.mode.group.name=migration modes
com.nuodb.migrator.migration.mode.data.option.description=Enables or disables data migration, true by default
com.nuodb.migrator.migration.mode.data.argument.name=true | false
com.nuodb.migrator.migration.mode.schema.option.description=Enables or disables schema migration, true by default
com.nuodb.migrator.migration.mode.schema.argument.name=true | false
com.nuodb.migrator.schema.migration.group.name=schema migration
com.nuodb.migrator.data.migration.group.name=data migration
com.nuodb.migrator.jdbc.type.group.name=type declarations & translations
com.nuodb.migrator.jdbc.type.name.option.description=SQL type name template, i.e. decimal({p},{s}) or varchar({n}), where {p} is a placeholder for a precision, {s} is a scale and {n} is a maximum size
com.nuodb.migrator.jdbc.type.name.argument.name=type name
com.nuodb.migrator.jdbc.type.code.option.description=Integer code of declared SQL type
com.nuodb.migrator.jdbc.type.code.argument.name=type code
com.nuodb.migrator.jdbc.type.size.option.description=Maximum size of custom data type
com.nuodb.migrator.jdbc.type.size.argument.name=type size
com.nuodb.migrator.jdbc.type.precision.option.description=The maximum total number of decimal digits that can be stored, both to the left and to the right of the decimal point. Typically, type precision is in the range of 1 through the maximum precision of 38.
com.nuodb.migrator.jdbc.type.precision.argument.name=type precision
com.nuodb.migrator.jdbc.type.scale.option.description=The number of fractional digits for numeric data types
com.nuodb.migrator.jdbc.type.scale.argument.name=type scale
com.nuodb.migrator.use.nuodb.types.option.description=Instructs the migrator to transform source database types to the best matching NuoDB types, where CHAR, VARCHAR and CLOB source types will be rendered as STRING columns, nuodb-types.properties file is a source of type overrides, the option is false by default
com.nuodb.migrator.use.nuodb.types.option.argument.name=true | false
com.nuodb.migrator.use.explicit.defaults.option.description=Transforms source column implicit default values to NuoDB explicit defaults, the option is false by default
com.nuodb.migrator.use.explicit.defaults.option.argument.name=true | false

com.nuodb.migrator.input.group.name=input specification
com.nuodb.migrator.input.path.option.description=Path on the file system
com.nuodb.migrator.input.path.argument.name=input path
com.nuodb.migrator.input.option.description=Input format attributes
com.nuodb.migrator.input.argument.description=attribute value

com.nuodb.migrator.commit.strategy.group.name=commit strategy specification
com.nuodb.migrator.commit.strategy.option.description=Commit strategy name, either single or batch or fully classified class name of a custom strategy implementing com.nuodb.migrator.jdbc.commit.CommitStrategy, default is batch
com.nuodb.migrator.commit.strategy.argument.name=single | batch | custom
com.nuodb.migrator.commit.strategy.attributes.option.description=Commit strategy attributes, such as commit.batch.size which is a number of updates to batch for commit point used with batch commit strategy, default is 1000
com.nuodb.migrator.commit.strategy.attributes.argument.name=commit strategy attributes

com.nuodb.migrator.insert.type.group.name=insert type specification
com.nuodb.migrator.replace.option.description=Writes REPLACE statements rather than INSERT statements
com.nuodb.migrator.table.replace.option.description=Writes REPLACE statement for the specified table
com.nuodb.migrator.table.insert.option.description=Writes INSERT statement for the specified table

com.nuodb.migrator.backup.loader.LoadTablesWork=Load tables
com.nuodb.migrator.backup.loader.LoadTableWork=Load table from {0}
com.nuodb.migrator.backup.loader.LoadTableForkWork=Load table from {0} thread #{1}
com.nuodb.migrator.backup.loader.LoadConstraintWork=Load {0} {1} into {2} table
com.nuodb.migrator.backup.writer.WriteQueriesWork=Export data
com.nuodb.migrator.backup.writer.WriteQueryWork=Export data to {0}

com.nuodb.migrator.jdbc.metadata.Database=database
com.nuodb.migrator.jdbc.metadata.Catalog=catalog
com.nuodb.migrator.jdbc.metadata.Schema=schema
com.nuodb.migrator.jdbc.metadata.Table=table
com.nuodb.migrator.jdbc.metadata.Column=column
com.nuodb.migrator.jdbc.metadata.PrimaryKey=primary key
com.nuodb.migrator.jdbc.metadata.Index=index
com.nuodb.migrator.jdbc.metadata.ForeignKey=foreign key
com.nuodb.migrator.jdbc.metadata.Sequence=sequence
com.nuodb.migrator.jdbc.metadata.Trigger=trigger

com.nuodb.migrator.schema.fail.on.empty.database.option.description=If an empty source database is migrated an error will be raised or warn message will be printed to logs depending on the value of this switch. Default is true, which raises error
com.nuodb.migrator.schema.fail.on.empty.database.argument.name=true | false
com.nuodb.migrator.schema.empty.database.error=Database is empty: no scripts to export. Verify connection & data inspection settings